data $str1 = { b 44, b 0, b 0 }
data $str2 = { b 10, b 0, b 0 }
data $str3 = { b 42, b 42, b 42, b 32, b 66, b 85, b 66, b 66, b 76, b 69, b 83, b 79, b 82, b 84, b 32, b 42, b 42, b 42, b 32, b 0, b 0 }
data $str4 = { b 83, b 79, b 82, b 84, b 69, b 68, b 32, b 32, b 32, b 58, b 32, b 0, b 0 }
data $str0 = { b 85, b 78, b 83, b 79, b 82, b 84, b 69, b 68, b 32, b 58, b 32, b 0, b 0 }
data $debug_before = { b 83, b 69, b 69, b 68, b 32, b 66, b 69, b 70, b 79, b 82, b 69, b 58, b 32, b 0, b 0 }
data $debug_after = { b 83, b 69, b 69, b 68, b 32, b 65, b 70, b 84, b 69, b 82, b 58, b 32, b 0, b 0 }
data $debug_mult = { b 77, b 85, b 76, b 84, b 58, b 32, b 0, b 0 }
data $debug_add = { b 65, b 68, b 68, b 58, b 32, b 0, b 0 }

export
function w $random(w %seed) {
@start
    %debug_before_str =l copy $debug_before
    %debug1_str =w call $printf_str(l %debug_before_str)
    %debug1 =w call $printf_int(w %seed)
    %newline1 =l copy $str2
    %newline1_print =w call $printf_str(l %newline1)

    %t1 =w mul %seed, 1664525
    %debug_mult_str =l copy $debug_mult
    %debug_mult_print =w call $printf_str(l %debug_mult_str)
    %debug_mult_val =w call $printf_int(w %t1)
    %newline_mult =l copy $str2
    %newline_mult_print =w call $printf_str(l %newline_mult)

    %t2 =w add %t1, 1013904223
    %debug_add_str =l copy $debug_add
    %debug_add_print =w call $printf_str(l %debug_add_str)
    %debug_add_val =w call $printf_int(w %t2)
    %newline_add =l copy $str2
    %newline_add_print =w call $printf_str(l %newline_add)

    %debug_after_str =l copy $debug_after
    %debug2_str =w call $printf_str(l %debug_after_str)
    %debug2 =w call $printf_int(w %t2)
    %newline2 =l copy $str2
    %newline2_print =w call $printf_str(l %newline2)
    ret %t2
}

export
function w $bubblesort(l %arraddr, w %n) {
@start
    %i =w copy 0
    %j =w copy 0
    %tmp =w copy 0
    %cmps =w copy 0
    %t5 =w sub %n, 1
    %i =w copy %t5
    jmp @L0
@L0
    %t6 =w csgew %i, 0
    jnz %t6, @L1, @L2
@L1
    %j =w copy 0
    jmp @L3
@L3
    %t7 =w csltw %j, %i
    jnz %t7, @L4, @L5
@L4
    %t8 =w add %j, 0
    %t9 =w mul %t8, 4
    %t11 =l extsw %t9
    %t10 =l add %arraddr, %t11
    %t12 =w loadw %t10
    %t13 =w add %j, 1
    %t14 =w mul %t13, 4
    %t16 =l extsw %t14
    %t15 =l add %arraddr, %t16
    %t17 =w loadw %t15
    %t18 =w csgtw %t12, %t17
    jnz %t18, @L6, @L7
@L6
    %t19 =w add %j, 0
    %t20 =w mul %t19, 4
    %t22 =l extsw %t20
    %t21 =l add %arraddr, %t22
    %t23 =w loadw %t21
    %tmp =w copy %t23
    %t24 =w add %j, 1
    %t25 =w mul %t24, 4
    %t27 =l extsw %t25
    %t26 =l add %arraddr, %t27
    %t28 =w loadw %t26
    %t29 =w add %j, 0
    %t30 =w mul %t29, 4
    %t32 =l extsw %t30
    %t31 =l add %arraddr, %t32
    storew %t28, %t31
    %t33 =w add %j, 1
    %t34 =w mul %t33, 4
    %t36 =l extsw %t34
    %t35 =l add %arraddr, %t36
    storew %tmp, %t35
    jmp @L8
@L7
@L8
    %t37 =w add %cmps, 1
    %cmps =w copy %t37
    %t38 =w add %j, 1
    %j =w copy %t38
    jmp @L3
@L5
    %t39 =w sub %i, 1
    %i =w copy %t39
    jmp @L0
@L2
    ret %cmps
}

export
function w $main() {
@start
    %n =w copy 0
    %arr =l copy 0
    %i =w copy 0
    %r =w copy 0
    %cmps =w copy 0
    %seed =w copy 1
    %n =w copy 100
    %t40 =w mul %n, 4
    %t41 =l call $malloc(w %t40)
    %arr =l copy %t41
    %i =w copy 0
    jmp @L9
@L9
    %t42 =w csltw %i, %n
    jnz %t42, @L10, @L11
@L10
    %t43 =w call $random(w %seed)
    %r =w copy %t43
    %seed =w copy %t43
    %t44 =w csltw %r, 0
    jnz %t44, @L12, @L13
@L12
    %t45 =w neg %r
    %r =w copy %t45
    jmp @L14
@L13
@L14
    %t46 =w rem %r, 50
    %r =w copy %t46
    %t47 =w mul 4, %i
    %t49 =l extsw %t47
    %t48 =l add %arr, %t49
    storew %r, %t48
    %t50 =w add %i, 1
    %i =w copy %t50
    jmp @L9
@L11
    %t51 =l copy $str0
    %t52 =w call $printf_str(l %t51)
    %i =w copy 0
    jmp @L15
@L15
    %t53 =w csltw %i, %n
    jnz %t53, @L16, @L17
@L16
    %t54 =w mul 4, %i
    %t56 =l extsw %t54
    %t55 =l add %arr, %t56
    %t57 =w loadw %t55
    %t58 =w call $printf_int(w %t57)
    %t59 =w sub %n, 1
    %t60 =w csltw %i, %t59
    jnz %t60, @L18, @L19
@L18
    %t61 =l copy $str1
    %t62 =w call $printf_str(l %t61)
    jmp @L20
@L19
@L20
    %t63 =w add %i, 1
    %i =w copy %t63
    jmp @L15
@L17
    %t64 =l copy $str2
    %t65 =w call $printf_str(l %t64)
    %t66 =l copy $str3
    %t67 =w call $printf_str(l %t66)
    %t68 =w call $bubblesort(w %arr, w %n)
    %cmps =w copy %t68
    %t69 =w call $printf_int(w %cmps)
    %t70 =l copy $str2
    %t71 =w call $printf_str(l %t70)
    %t72 =l copy $str4
    %t73 =w call $printf_str(l %t72)
    %i =w copy 0
    jmp @L21
@L21
    %t74 =w csltw %i, %n
    jnz %t74, @L22, @L23
@L22
    %t75 =w mul 4, %i
    %t77 =l extsw %t75
    %t76 =l add %arr, %t77
    %t78 =w loadw %t76
    %t79 =w call $printf_int(w %t78)
    %t80 =w sub %n, 1
    %t81 =w csltw %i, %t80
    jnz %t81, @L24, @L25
@L24
    %t82 =l copy $str1
    %t83 =w call $printf_str(l %t82)
    jmp @L26
@L25
@L26
    %t84 =w add %i, 1
    %i =w copy %t84
    jmp @L21
@L23
    %t85 =l copy $str2
    %t86 =w call $printf_str(l %t85)
    call $free(l %arr)
    ret 0
}

function w $printf_int(w %value) {
@start
    %result =w call $printf(l $int_format, w %value)
    ret %result
}

function w $printf_str(l %str) {
@start
    %result =w call $printf(l %str)
    ret %result
}

data $int_format = { b 37, b 100, b 0 }  # "%d"
data $long_format = { b 37, b 108, b 100, b 0 }  # "%ld"
data $number_str = { b 78, b 85, b 77, b 0 }  # "NUM"
